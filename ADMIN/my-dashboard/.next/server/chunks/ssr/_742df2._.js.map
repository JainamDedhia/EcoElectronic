{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://D%3A/flutter%20prog/my-dashboard/src/app/admin/BulkEwaste/page.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { db } from \"../../../components/services/firebaseConfig\";\r\n// import { collection, getDocs } from \"firebase/firestore\";\r\n// import SideBar from \"../../../components/SideBar/page\";\r\n// import { Bell, Search } from \"lucide-react\";\r\n// import Image from \"next/image\";\r\n\r\n// interface BulkScrapRequest {\r\n//   id: string;\r\n//   businessName: string;\r\n//   contactNumber: string;\r\n//   isSpecialRequest: boolean;\r\n//   note: string;\r\n//   organizationName: string;\r\n//   selectedMaterial: string;\r\n//   selectedQuantity: number;\r\n//   status: string;\r\n//   timestamp: string;\r\n//   userId: string;\r\n// }\r\n\r\n// interface Volunteer {\r\n//   id: string;\r\n//   name: string;\r\n//   phnNo: string;\r\n//   svid: string;\r\n// }\r\n\r\n// const BulkScrapPage = () => {\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [bulkRequests, setBulkRequests] = useState<BulkScrapRequest[]>([]);\r\n//   const [volunteers, setVolunteers] = useState<Volunteer[]>([]);\r\n\r\n//   const fetchBulkRequests = async () => {\r\n//     try {\r\n//       const querySnapshot = await getDocs(collection(db, \"BulkScrapRequests\"));\r\n//       const data = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         businessName: doc.data().businessName || \"Unknown\",\r\n//         contactNumber: doc.data().contactNumber || \"N/A\",\r\n//         isSpecialRequest: doc.data().isSpecialRequest || false,\r\n//         note: doc.data().note || \"\",\r\n//         organizationName: doc.data().organizationName || \"Unknown\",\r\n//         selectedMaterial: doc.data().selectedMaterial || \"Unknown\",\r\n//         selectedQuantity: doc.data().selectedQuantity || 0,\r\n//         status: doc.data().status || \"pending\",\r\n//         timestamp: doc.data().timestamp?.toDate().toLocaleString() || \"N/A\",\r\n//         userId: doc.data().userId || \"N/A\",\r\n//       }));\r\n//       setBulkRequests(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching bulk scrap requests:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchVolunteers = async () => {\r\n//     try {\r\n//       const querySnapshot = await getDocs(collection(db, \"Svolunteer\"));\r\n//       const data = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         name: doc.data().name || \"Unknown\",\r\n//         phnNo: doc.data().phnNo || \"N/A\",\r\n//         svid: doc.data().svid || \"N/A\",\r\n//       }));\r\n//       setVolunteers(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching volunteers:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchBulkRequests();\r\n//     fetchVolunteers();\r\n//   }, []);\r\n\r\n//   const filteredRequests = bulkRequests.filter((r) =>\r\n//     r.businessName.toLowerCase().includes(search.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 flex\">\r\n//       <SideBar />\r\n//       <div className=\"flex-1\">\r\n//         {/* Header */}\r\n//         <header className=\"bg-white shadow p-4 flex justify-between items-center\">\r\n//           <div className=\"relative\">\r\n//             <input\r\n//               type=\"search\"\r\n//               placeholder=\"Search by business name...\"\r\n//               className=\"pl-3 pr-10 py-2 border rounded-md w-64\"\r\n//               value={search}\r\n//               onChange={(e) => setSearch(e.target.value)}\r\n//             />\r\n//             <Search className=\"w-5 h-5 absolute right-3 top-2.5 text-gray-400\" />\r\n//           </div>\r\n//           <div className=\"flex items-center gap-4\">\r\n//             <button className=\"relative\">\r\n//               <Bell className=\"w-6 h-6 text-gray-600\" />\r\n//             </button>\r\n//             <div className=\"flex items-center gap-2\">\r\n//               <Image src=\"/profile.jpg\" alt=\"Admin\" width={32} height={32} className=\"rounded-full\" />\r\n//               <p className=\"text-sm font-medium\">Admin</p>\r\n//             </div>\r\n//           </div>\r\n//         </header>\r\n\r\n//         {/* Main Content */}\r\n//         <main className=\"p-6\">\r\n//           <h1 className=\"text-2xl font-semibold mb-4\">Bulk Scrap Requests</h1>\r\n//           <div className=\"overflow-auto bg-white shadow-md rounded-lg p-4 mb-6\">\r\n//             <table className=\"w-full border-collapse\">\r\n//               <thead>\r\n//                 <tr className=\"bg-gray-200 text-left\">\r\n//                   <th className=\"p-3\">Business</th>\r\n//                   <th className=\"p-3\">Contact</th>\r\n//                   <th className=\"p-3\">Material</th>\r\n//                   <th className=\"p-3\">Quantity (kg)</th>\r\n//                   <th className=\"p-3\">Organization</th>\r\n//                   <th className=\"p-3\">Special Request</th>\r\n//                   <th className=\"p-3\">Status</th>\r\n//                   <th className=\"p-3\">Note</th>\r\n//                   <th className=\"p-3\">Timestamp</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredRequests.map((req) => (\r\n//                   <tr key={req.id} className=\"border-t\">\r\n//                     <td className=\"p-3\">{req.businessName}</td>\r\n//                     <td className=\"p-3\">{req.contactNumber}</td>\r\n//                     <td className=\"p-3\">{req.selectedMaterial}</td>\r\n//                     <td className=\"p-3\">{req.selectedQuantity}</td>\r\n//                     <td className=\"p-3\">{req.organizationName}</td>\r\n//                     <td className=\"p-3\">{req.isSpecialRequest ? \"Yes\" : \"No\"}</td>\r\n//                     <td className=\"p-3\">{req.status}</td>\r\n//                     <td className=\"p-3\">{req.note}</td>\r\n//                     <td className=\"p-3\">{req.timestamp}</td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n\r\n//           <h1 className=\"text-2xl font-semibold mb-4\">Available Volunteers</h1>\r\n//           <div className=\"overflow-auto bg-white shadow-md rounded-lg p-4\">\r\n//             <table className=\"w-full border-collapse\">\r\n//               <thead>\r\n//                 <tr className=\"bg-gray-200 text-left\">\r\n//                   <th className=\"p-3\">Name</th>\r\n//                   <th className=\"p-3\">Phone Number</th>\r\n//                   <th className=\"p-3\">Volunteer ID</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {volunteers.map((vol) => (\r\n//                   <tr key={vol.id} className=\"border-t\">\r\n//                     <td className=\"p-3\">{vol.name}</td>\r\n//                     <td className=\"p-3\">{vol.phnNo}</td>\r\n//                     <td className=\"p-3\">{vol.svid}</td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BulkScrapPage;\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { db } from \"../../../components/services/firebaseConfig\";\r\n// import { collection, getDocs, doc, updateDoc } from \"firebase/firestore\";\r\n// import SideBar from \"../../../components/SideBar/page\";\r\n// import { Bell, Search } from \"lucide-react\";\r\n// import Image from \"next/image\";\r\n\r\n// interface BulkScrapRequest {\r\n//   id: string;\r\n//   businessName: string;\r\n//   contactNumber: string;\r\n//   isSpecialRequest: boolean;\r\n//   note: string;\r\n//   organizationName: string;\r\n//   selectedMaterial: string;\r\n//   selectedQuantity: number;\r\n//   status: string;\r\n//   timestamp: string;\r\n//   userId: string;\r\n//   assignedVolunteer?: string;\r\n// }\r\n\r\n// interface Volunteer {\r\n//   id: string;\r\n//   name: string;\r\n//   phnNo: string;\r\n//   svid: string;\r\n// }\r\n\r\n// const BulkScrapPage = () => {\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [bulkRequests, setBulkRequests] = useState<BulkScrapRequest[]>([]);\r\n//   const [volunteers, setVolunteers] = useState<Volunteer[]>([]);\r\n//   const [assignments, setAssignments] = useState<{ [key: string]: string }>({});\r\n\r\n//   const fetchBulkRequests = async () => {\r\n//     try {\r\n//       const querySnapshot = await getDocs(collection(db, \"bulk_scrap_requests\"));\r\n//       const data = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         businessName: doc.data().businessName || \"Unknown\",\r\n//         contactNumber: doc.data().contactNumber || \"N/A\",\r\n//         isSpecialRequest: doc.data().isSpecialRequest || false,\r\n//         note: doc.data().note || \"\",\r\n//         organizationName: doc.data().organizationName || \"Unknown\",\r\n//         selectedMaterial: doc.data().selectedMaterial || \"Unknown\",\r\n//         selectedQuantity: doc.data().selectedQuantity || 0,\r\n//         status: doc.data().status || \"pending\",\r\n//         timestamp: doc.data().timestamp?.toDate().toLocaleString() || \"N/A\",\r\n//         userId: doc.data().userId || \"N/A\",\r\n//         assignedVolunteer: doc.data().assignedVolunteer || \"\",\r\n//       }));\r\n//       setBulkRequests(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching bulk scrap requests:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchVolunteers = async () => {\r\n//     try {\r\n//       const querySnapshot = await getDocs(collection(db, \"Svolunteer\"));\r\n//       const data = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         name: doc.data().name || \"Unknown\",\r\n//         phnNo: doc.data().phnNo || \"N/A\",\r\n//         svid: doc.data().svid || \"N/A\",\r\n//       }));\r\n//       setVolunteers(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching volunteers:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAssign = async (requestId: string) => {\r\n//     const selectedVolunteer = assignments[requestId];\r\n//     if (!selectedVolunteer) return alert(\"Please select a volunteer.\");\r\n\r\n//     try {\r\n//       await updateDoc(doc(db, \"bulk_scrap_requests\", requestId), {\r\n//         assignedVolunteer: selectedVolunteer,\r\n//       });\r\n//       alert(\"Volunteer assigned successfully!\");\r\n//       fetchBulkRequests(); // Refresh data\r\n//     } catch (error) {\r\n//       console.error(\"Error assigning volunteer:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchBulkRequests();\r\n//     fetchVolunteers();\r\n//   }, []);\r\n\r\n//   const filteredRequests = bulkRequests.filter((r) =>\r\n//     r.businessName.toLowerCase().includes(search.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 flex\">\r\n//       <SideBar />\r\n//       <div className=\"flex-1\">\r\n//         <header className=\"bg-white shadow p-4 flex justify-between items-center\">\r\n//           <div className=\"relative\">\r\n//             <input\r\n//               type=\"search\"\r\n//               placeholder=\"Search by business name...\"\r\n//               className=\"pl-3 pr-10 py-2 border rounded-md w-64\"\r\n//               value={search}\r\n//               onChange={(e) => setSearch(e.target.value)}\r\n//             />\r\n//             <Search className=\"w-5 h-5 absolute right-3 top-2.5 text-gray-400\" />\r\n//           </div>\r\n//           <div className=\"flex items-center gap-4\">\r\n//             <button className=\"relative\">\r\n//               <Bell className=\"w-6 h-6 text-gray-600\" />\r\n//             </button>\r\n//             <div className=\"flex items-center gap-2\">\r\n//               <Image src=\"/profile.jpg\" alt=\"Admin\" width={32} height={32} className=\"rounded-full\" />\r\n//               <p className=\"text-sm font-medium\">Admin</p>\r\n//             </div>\r\n//           </div>\r\n//         </header>\r\n\r\n//         <main className=\"p-6\">\r\n//           <h1 className=\"text-2xl font-semibold mb-4\">Bulk Scrap Requests</h1>\r\n//           <div className=\"overflow-auto bg-white shadow-md rounded-lg p-4 mb-6\">\r\n//             <table className=\"w-full border-collapse\">\r\n//               <thead>\r\n//                 <tr className=\"bg-gray-200 text-left\">\r\n//                   <th className=\"p-3\">Business</th>\r\n//                   <th className=\"p-3\">Contact</th>\r\n//                   <th className=\"p-3\">Material</th>\r\n//                   <th className=\"p-3\">Quantity (kg)</th>\r\n//                   <th className=\"p-3\">Organization</th>\r\n//                   <th className=\"p-3\">Special Request</th>\r\n//                   <th className=\"p-3\">Status</th>\r\n//                   <th className=\"p-3\">Note</th>\r\n//                   <th className=\"p-3\">Timestamp</th>\r\n//                   <th className=\"p-3\">Assign Volunteer</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredRequests.map((req) => (\r\n//                   <tr key={req.id} className=\"border-t\">\r\n//                     <td className=\"p-3\">{req.businessName}</td>\r\n//                     <td className=\"p-3\">{req.contactNumber}</td>\r\n//                     <td className=\"p-3\">{req.selectedMaterial}</td>\r\n//                     <td className=\"p-3\">{req.selectedQuantity}</td>\r\n//                     <td className=\"p-3\">{req.organizationName}</td>\r\n//                     <td className=\"p-3\">{req.isSpecialRequest ? \"Yes\" : \"No\"}</td>\r\n//                     <td className=\"p-3\">{req.status}</td>\r\n//                     <td className=\"p-3\">{req.note}</td>\r\n//                     <td className=\"p-3\">{req.timestamp}</td>\r\n//                     <td className=\"p-3\">\r\n//                       <select\r\n//                         className=\"border p-1 rounded\"\r\n//                         value={assignments[req.id] || \"\"}\r\n//                         onChange={(e) =>\r\n//                           setAssignments({ ...assignments, [req.id]: e.target.value })\r\n//                         }\r\n//                       >\r\n//                         <option value=\"\">Select</option>\r\n//                         {volunteers.map((vol) => (\r\n//                           <option key={vol.svid} value={vol.svid}>\r\n//                             {vol.name}\r\n//                           </option>\r\n//                         ))}\r\n//                       </select>\r\n//                       <button\r\n//                         onClick={() => handleAssign(req.id)}\r\n//                         className=\"ml-2 bg-blue-500 text-white px-2 py-1 rounded\"\r\n//                       >\r\n//                         Assign\r\n//                       </button>\r\n//                       {req.assignedVolunteer && (\r\n//                         <div className=\"text-xs mt-1 text-green-600\">\r\n//                           Assigned: {req.assignedVolunteer}\r\n//                         </div>\r\n//                       )}\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BulkScrapPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file://D%3A/flutter%20prog/my-dashboard/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,KAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}